#!/usr/bin/env bash
#
# Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

source $(dirname "${0}")/common/helpers
REPO_ROOT=$(dirname "${0}")/../..
ETCD_BACKUP_DIR=$REPO_ROOT/dev/local-backupbuckets
CONTAINER_PATH=/etc/gardener/local-backupbuckets

WEBHOOK_SERVER_PORT=${WEBHOOK_SERVER_PORT:-8444}
WEBHOOK_CERT_DIR=${WEBHOOK_CERT_DIR:-/tmp/gardener-extensions-cert}
if [[ -z "$USE_IPV6" ]]; then
  SERVICE_HOST_IP=ip6-localhost
else
  SERVICE_HOST_IP=localhost
fi
SERVICE_HOST_IP=${SERVICE_HOST_IP:-127.0.0.1}
METRICS_BIND_ADDRESS=${METRICS_BIND_ADDRESS:-:8080}
HEALTH_BIND_ADDRESS=${HEALTH_BIND_ADDRESS:-:8081}

mktemp_kubeconfig
kubeconfig="$__tmp_kubeconfig"
trap cleanup_kubeconfig EXIT

export LEADER_ELECTION_NAMESPACE=garden
export GO111MODULE=on
export GARDENER_SHOOT_CLIENT=external

# The namespace for the provider-local extension controller is required because it is where
# gardenlet will look for the gardener-extension-heartbeat lease resource during shoot
# health checks.
HEARTBEAT_NAMESPACE="$(kubectl get namespaces -l controllerregistration.core.gardener.cloud/name=provider-local -o jsonpath='{.items[0].metadata.name}')"
if [ -z "$HEARTBEAT_NAMESPACE" ]; then
  echo "Could not find namespace for provider-local extension controller heartbeats"
  exit 1
fi

# sudo is required for now, as we need to manipulate /etc/hosts for making the shoot API server reachable on the host machine
SUDO=
if [ "$USER" != root ]; then
  SUDO="sudo -E"
fi

$SUDO go run \
  -mod=vendor \
  -ldflags "$("$(dirname $0)"/../get-build-ld-flags.sh)" \
  "$REPO_ROOT/cmd/gardener-extension-provider-local/main.go" \
  --kubeconfig="${KUBECONFIG:-$kubeconfig}" \
  --leader-election=false \
  --webhook-config-mode=url \
  --webhook-config-server-host=0.0.0.0 \
  --webhook-config-server-port="${WEBHOOK_SERVER_PORT}" \
  --webhook-config-url=$(get_host_address):${WEBHOOK_SERVER_PORT} \
  --webhook-config-cert-dir="${WEBHOOK_CERT_DIR}" \
  --service-host-ip="${SERVICE_HOST_IP}" \
  --metrics-bind-address="${METRICS_BIND_ADDRESS}" \
  --health-bind-address="${HEALTH_BIND_ADDRESS}" \
  --heartbeat-namespace="${HEARTBEAT_NAMESPACE}" \
  --gardener-version="$(cat "$(dirname $0)/../../VERSION")" \
  --backupbucket-local-dir="$ETCD_BACKUP_DIR" \
  --backupbucket-container-mount-path="$CONTAINER_PATH" \
  --is6="${USE_IPV6}"
